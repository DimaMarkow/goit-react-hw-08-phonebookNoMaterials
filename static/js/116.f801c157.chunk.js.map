{"version":3,"file":"static/js/116.f801c157.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Phonebook/phonebook.module.css?5245","redux/contacts/contacts-selectors.js","components/Phonebook/ContactForm/ContactForm.jsx","components/Phonebook/ContactList/ContactList.jsx","redux/filter/filter-selectors.js","components/Phonebook/Filter/Filter.jsx","components/Phonebook/Loader/Loader.jsx","components/Phonebook/Phonebook.jsx","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"phonebook_wrapper__MfQ3k\",\"buttonWrapper\":\"phonebook_buttonWrapper__rgE61\",\"title\":\"phonebook_title__wIGm2\",\"btn\":\"phonebook_btn__hf3rN\",\"btnDel\":\"phonebook_btnDel__frk2j\",\"contact\":\"phonebook_contact__ZuVSL\",\"text\":\"phonebook_text__S15cN\"};","export const getAllContacts = store => store.contacts.items;\n\nexport const getFilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n\n  const normalizedFilter = filter.toLowerCase();\n  const result = contacts.items.filter(({ name }) => {\n    return name.toLowerCase().includes(normalizedFilter);\n  });\n\n  return result;\n};\n\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n","import { useState } from 'react';\nimport css from 'components/Phonebook/phonebook.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { addContact } from 'redux/contacts/operations';\n\nimport { getAllContacts } from 'redux/contacts/contacts-selectors';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nconst ContactForm = () => {\n  const [state, setState] = useState(INITIAL_STATE);\n  const dispatch = useDispatch();\n  const AllContacts = useSelector(getAllContacts);\n\n  const resetForm = () => {\n    setState(INITIAL_STATE);\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setState(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const data = state;\n    console.log(data);\n\n    const normalizedName = data.name.toLowerCase();\n    const isRepeatedContact = AllContacts.some(\n      contact => contact.name.toLowerCase() === normalizedName\n    );\n    if (isRepeatedContact) {\n      const alertString = data.name + ' is already in contacts.';\n      alert(alertString);\n      return;\n    }\n    dispatch(addContact({ ...data }));\n    resetForm();\n  };\n\n  return (\n    <>\n      <h2 className={css.title}>Phonebook</h2>\n      <form className={css.buttonWrapper} onSubmit={handleSubmit}>\n        <label className={css.text}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={state.name}\n            onChange={handleChange}\n          />\n        </label>\n        <label className={css.text}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={state.number}\n            onChange={handleChange}\n          />\n        </label>\n        <button className={css.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default ContactForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { getFilteredContacts } from 'redux/contacts/contacts-selectors';\n\nimport css from 'components/Phonebook/phonebook.module.css';\n\nconst ContactList = () => {\n  const contacts = useSelector(getFilteredContacts);\n\n  const dispatch = useDispatch();\n\n  const onDeleteContact = idForDelete => {\n    dispatch(deleteContact(idForDelete));\n  };\n\n  return (\n    <>\n      <h2 className={css.title}>Contacts</h2>\n      <ul className={css.buttonWrapper}>\n        {contacts.map(({ id, name, number }) => (\n          <li key={id} className={css.contact}>\n            <p className={css.text}>\n              {name} {number}\n            </p>\n            <button\n              type=\"button\"\n              className={css.btnDel}\n              onClick={() => onDeleteContact(id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default ContactList;\n","export const getFilter = ({ filter }) => filter;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport { setFilter } from 'redux/filter/filter-slice';\nimport { getFilter } from 'redux/filter/filter-selectors';\n\nimport css from 'components/Phonebook/phonebook.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const handleChange = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  return (\n    <>\n      <form className={css.buttonWrapper}>\n        <label className={css.text}>\n          Find a contact by name\n          <input\n            type=\"text\"\n            name=\"filter\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={filter}\n            onChange={handleChange}\n          />\n        </label>\n      </form>\n    </>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport { RotatingLines } from 'react-loader-spinner';\n\nexport default function Loader() {\n  return (\n    <RotatingLines\n      strokeColor=\"grey\"\n      strokeWidth=\"5\"\n      animationDuration=\"0.75\"\n      width=\"48\"\n      visible={true}\n    />\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { fetchContacts } from 'redux/contacts/operations';\n\nimport css from './phonebook.module.css';\nimport ContactForm from 'components/Phonebook/ContactForm/ContactForm';\nimport ContactList from 'components/Phonebook/ContactList/ContactList';\nimport Filter from 'components/Phonebook/Filter/Filter';\nimport Loader from 'components/Phonebook/Loader/Loader';\n\nimport {\n  getFilteredContacts,\n  getIsLoading,\n  getError,\n} from 'redux/contacts/contacts-selectors';\n\nconst Phonebook = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filteredContacts = useSelector(getFilteredContacts);\n  const isContacts = Boolean(filteredContacts.length);\n\n  return (\n    <div className={css.wrapper}>\n      <ContactForm />\n      <Filter />\n      {isLoading && !error && <Loader />}\n      {isContacts && <ContactList />}\n      {!isContacts && !isLoading && <p>No contacts in the list</p>}\n    </div>\n  );\n};\n\nexport default Phonebook;\n","import Phonebook from 'components/Phonebook/Phonebook';\n\nexport default function Contacts() {\n  return (\n    <>\n      <Phonebook />\n    </>\n  );\n}\n"],"names":["getAllContacts","store","contacts","items","getFilteredContacts","filter","normalizedFilter","toLowerCase","name","includes","getIsLoading","state","isLoading","getError","error","INITIAL_STATE","number","useState","setState","dispatch","useDispatch","AllContacts","useSelector","handleChange","e","target","value","prevState","className","css","onSubmit","evt","preventDefault","data","console","log","normalizedName","some","contact","alertString","alert","addContact","type","pattern","title","required","onChange","map","id","onClick","idForDelete","deleteContact","getFilter","setFilter","currentTarget","Loader","strokeColor","strokeWidth","animationDuration","width","visible","useEffect","fetchContacts","filteredContacts","isContacts","Boolean","length","Contacts"],"sourceRoot":""}